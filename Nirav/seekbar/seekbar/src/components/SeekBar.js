import React, { useRef, useState } from 'react'
import Slider from 'react-slider-simple';
import ReactSlider from "react-slider";
import moment from 'moment';
import videoTesting from '../assate/image/videoTesting.mp4'
import loder from '../assate/image/loder.svg'

const SeekBar = () => {

    const [value, setValue] = useState(0);
    const videoref = useRef();

    // const handleChange = (newValue) => {
    // let miliSecond = moment().format('SSS') * 0.006;
    // setTimeout(() => {
    //     setValue(value + 5);
    // }, 300);
    // };

    // console.log('newValue', value + miliSecond)


    return (
        <div>
            <h1>SeekBar</h1>

            <video
                ref={videoref}
                src={videoTesting}
                // onPlay={onPlay}
                // onPause={onPause}
                width='300px'
                controls={true}
            />
    
            <Slider value={value} min='0' max='100' />

            <div className='svgLoder'>
                <svg xmlns="http://www.w3.org/2000/svg" width="320" height="78" viewBox="0 0 320 78" fill="none">
                    <path classname="path" stroke-dasharray="500" d="M166.5 58.9999 C161 45.7674 166.114 48.2483 167.485 48.6315 C168.857 49.0147 170.625 48.06 170.553 46.6377 C170.488 45.3128 168.779 44.5075 167.576 45.0595 C166.374 45.6115 165.815 47.1118 166.042 48.4172 C166.27 49.7226 167.128 50.8397 168.109 51.723 C169.182 52.6907 170.456 53.47 171.288 54.6455 C172.12 55.8276 172.354 57.6266 171.301 58.6138 C170.248 59.6009 165.217 58.1396 165.652 56.7628 C165.799 56.3004 169.398 56.1013 168.995 58.8355 C166.5 75.3185 194.039 77.176 206.207 71.701 C209.99 69.9994 214.306 67.2003 214.007 63.0632 C213.773 59.7704 210.556 57.4778 207.397 56.4971 C200.63 54.3929 192.765 56.3478 187.773 61.3746 C193.948 61.1733 200 58.4065 204.186 53.8668 C200.962 50.1714 199.798 49.6713 197.582 45.2939 C195.365 40.9165 195.053 38.9617 195.632 34.0193 C195.775 32.7788 196.457 31.4864 195.885 30.3823 C194.761 28.2326 191.758 28.7521 190.653 26.5959 C190.315 25.9464 190.341 25.1736 190.38 24.4397 C190.497 21.9847 192.518 18.6075 189.6 16.0681 C189.08 15.6135 188.365 15.5291 187.676 15.6265 C182.489 16.3604 177.464 18.2568 173.09 21.1339 C178.179 21.8224 183.132 19.4583 187.676 17.0813 C188.735 16.5228 189.983 15.5226 189.548 14.4055 C189.002 13.0027 186.649 12.7624 185.167 12.9897 C182.554 13.3924 180.136 12.1129 179.941 9.46961 C181.397 9.33322 182.853 9.19683 184.315 9.06694 C183.75 7.39782 183.178 5.72871 182.612 4.05959 C181.41 4.90389 180.201 5.7417 178.998 6.586 C178.712 4.98832 178.426 3.39064 178.134 1.79297 C176.476 2.358 174.819 2.91654 173.161 3.48157 C174.019 4.8974 174.877 6.31972 175.729 7.73554 C174.208 7.86544 172.687 7.99533 171.166 8.11873 C171.738 9.80083 172.31 11.4829 172.882 13.165 C174.162 12.3857 175.436 11.5998 176.717 10.8205 C177.308 12.2038 177.9 13.8145 177.224 15.1589 C176.288 17.0423 173.519 17.2177 172.258 18.9063 C170.568 21.1664 172.57 24.3098 174.637 26.2322 C176.704 28.1546 179.167 30.6421 178.309 33.3308 C177.919 34.5518 176.86 35.6494 177.1 36.9029 C177.25 37.6952 177.887 38.2862 178.472 38.8448 C186.298 46.385 187.026 52.464 183.295 62.667 C182.567 64.6609 181.605 66.5898 181.189 68.668 C180.766 70.7463 180.974 73.0909 182.352 74.708 C184.952 77.7475 189.814 76.6629 193.578 75.3185 C206.623 70.6684 380 71.701 380 71.701 M-60 75.461 C-60 75.461 107 73.9999 124.471 76.4999 C129.474 77.2157 136.743 76.578 138.927 75.461 C143.809 72.967 142.671 67.6609 140.253 64.1408C136.834 59.166 130.965 56.0096 124.952 55.7173C123.938 55.6654 123.581 57.0227 124.471 57.5098C128.976 59.9518 134.299 60.9 139.363 60.0947C139.122 55.1978 138.518 54.0807 139.493 49.2747C140.624 43.6828 141.755 42.254 146.89 37.3181C147.176 37.0453 147.384 36.6881 147.429 36.2984C147.689 34.0448 145.18 32.6095 145.635 30.3039C145.778 29.583 146.272 28.992 146.753 28.4399C148.372 26.576 152.057 25.1796 151.329 21.3673C151.219 20.7893 150.842 20.2892 150.335 19.9904C145.746 17.2692 140.546 15.6066 135.229 15.1519C139.051 19.1072 144.94 20.2177 150.289 21.1984C151.004 21.3283 151.771 21.0555 152.155 20.4321C153.078 18.9188 151.186 17.0354 149.763 16.23C147.462 14.9246 146.357 12.4242 147.839 10.2355L151.524 12.6255L153.292 7.63767L148.892 7.38438L151.186 3.09144L146.233 1.33789L145.616 6.2673L141.794 3.74739L140.013 8.77423L144.478 9.30679C144.082 10.7616 143.549 12.3852 142.19 13.0282C140.286 13.931 138.004 12.3528 135.97 12.8983C133.24 13.6322 132.869 17.3341 133.298 20.1268C133.727 22.9195 134.124 26.3941 131.784 27.9723C130.724 28.6867 129.21 28.8945 128.618 30.0246C128.248 30.739 128.378 31.6028 128.488 32.4016C129.964 43.1697 126.766 48.3849 117.51 54.0937C115.033 55.6199 112.303 56.7824 110.503 59.2374C109.892 60.0752 109.463 61.0494 109.339 62.0756C108.813 66.6478 113.675 69.0248 117.744 70.3952C123.093 72.1942 129.086 72.1747 134.39 70.2263C140.292 68.0571 147.901 63.4914 150.345 57.7242C151.079 55.9836 151.625 54.1651 152.009 52.3141C152.288 50.9763 152.581 49.6254 152.698 48.2615C152.717 48.0082 153.023 45.3519 152.067 46.1118C151.924 46.2222 151.866 46.404 151.814 46.5729C150.702 50.3333 153.535 54.8341 156.246 57.4774C158.059 53.9053 161.194 49.4941 161.5 45.4999" stroke="black" stroke-width="1.1" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path>
                </svg>
            </div>

            <img src={loder} alt='sdhjh' />
            {/* <ReactSlider
                className="horizontal-slider"
                thumbClassName="example-thumb"
                trackClassName="example-track"
                // renderTrack={(props, state) => console.log(state.value) } //custom track
                // onChange={(e) => handleChange(e)}
                step={0.001}
                value={value}
            /> */}
        </div>
    )
}

export default SeekBar